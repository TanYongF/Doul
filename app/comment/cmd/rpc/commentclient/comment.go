// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package commentclient

import (
	"context"

	"go_code/Doul/app/comment/cmd/rpc/comment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommentReq  = comment.CommentReq
	CommentResp = comment.CommentResp

	Comment interface {
		Greet(ctx context.Context, in *CommentReq, opts ...grpc.CallOption) (*CommentResp, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

func (m *defaultComment) Greet(ctx context.Context, in *CommentReq, opts ...grpc.CallOption) (*CommentResp, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.Greet(ctx, in, opts...)
}
