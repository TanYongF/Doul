syntax = "v1"

info(
	title: "video api"
	desc: "the api which is related to the video like feed, publish, etc."
	author: "tyf"
	email: "tan13621251388@gmail.com"
	version: "1.0"
)

type CommonResp {
	Code uint32 `json:"status_code"`
	Msg  string `json:"status_msg"`
}

// Video
type Video {
	Author        User   `json:"author"`         // 视频作者信息
	CommentCount  int64  `json:"comment_count"`  // 视频的评论总数
	CoverURL      string `json:"cover_url"`      // 视频封面地址
	FavoriteCount int64  `json:"favorite_count"` // 视频的点赞总数
	VideoId       int64  `json:"id"`             // 视频唯一标识
	IsFavorite    bool   `json:"is_favorite"`    // true-已点赞，false-未点赞
	PlayURL       string `json:"play_url"`       // 视频播放地址
	Title         string `json:"title"`          // 视频标题
}

// 视频作者信息
type User {
	FollowCount   int64  `json:"follow_count"`   // 关注总数
	FollowerCount int64  `json:"follower_count"` // 粉丝总数
	UserId        int64  `json:"id"`             // 用户id
	IsFollow      bool   `json:"is_follow"`      // true-已关注，false-未关注
	Name          string `json:"name"`           // 用户名称
}

type feedReq {
	LastestTime string `form:"latest_time"`
}

type feedResp {
	CommonResp
	NextTime  *int64  `json:"next_time"`  // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time\
	VideoList []Video `json:"video_list"` // 视频列表
}
//todo 需要解决文件上传问题

type publishActionReq {
	Title string `json:"title"`
}
type publishActionResp {
	CommonResp
}

type publishListReq {
	UserId string `form:"user_id"`
}

type publishListResp {
	CommonResp
	VideoList []Video `json:"video_list"` // 用户发布的视频列表
}

service video-api {
	@handler feed
	get /douyin/feed (feedReq) returns (feedResp)
}

@server (
	middleware : AuthMiddleware
)
service video-api{
	@doc "publish video"
	@handler publishAction
	post /douyin/publish/action (publishActionReq) returns (publishActionResp)
	
	@doc "get the publish list"
	@handler publishList
	get /douyin/publish/list (publishListReq) returns (publishListResp)
	
}